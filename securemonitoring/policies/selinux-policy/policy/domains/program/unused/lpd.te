#DESC Lpd - Print server
#
# Authors:  Stephen Smalley <sds@epoch.ncsc.mil> and Timothy Fraser  
# Modified by David A. Wheeler <dwheeler@ida.org> for LPRng (Red Hat 7.1)
#

#################################
#
# Rules for the lpd_t domain.
#
# lpd_t is the domain of lpd.
# lpd_exec_t is the type of the lpd executable.
# printer_t is the type of the Unix domain socket created
# by lpd. 
#
type printer_port_t, port_type;
type lpd_t, domain, privlog;
role system_r types lpd_t;
every_domain(lpd_t)
type lpd_exec_t, file_type, sysadmfile, exec_type;
domain_auto_trans(initrc_t, lpd_exec_t, lpd_t)
type printer_t, file_type, sysadmfile;

type printconf_t, file_type, sysadmfile;   # Type for files in /usr/share/printconf.

tmp_domain(lpd);

# Allow checkpc to access the lpd spool so it can check & fix it.
# This requires that /usr/sbin/checkpc have type checkpc_t.
type checkpc_t, domain, privlog;
role system_r types checkpc_t;
every_domain(checkpc_t)
log_domain(checkpc)
type checkpc_exec_t, file_type, sysadmfile, exec_type;
domain_auto_trans({ initrc_t system_crond_t }, checkpc_exec_t, checkpc_t)
allow checkpc_t crond_t:fd use;
allow checkpc_t crond_t:fifo_file read;
allow checkpc_t checkpc_t:capability { setgid setuid dac_override };

allow checkpc_t print_spool_t:file { rw_file_perms unlink };
allow checkpc_t print_spool_t:dir { read write search add_name remove_name getattr };
allow checkpc_t printer_t:chr_file { getattr append };

# Allow access to /dev/console through the fd:
allow checkpc_t init_t:fd use;

# This is less desirable, but checkpc demands /bin/bash and /bin/chown:
can_exec(checkpc_t, shell_exec_t)
can_exec(checkpc_t, bin_t)


type lpd_var_run_t, file_type, sysadmfile, pidfile;
file_type_auto_trans(lpd_t, var_run_t, lpd_var_run_t)

allow checkpc_t lpd_var_run_t:dir { search getattr };


# This is needed to permit chown to read /var/spool/lpd/lp.
# This is opens up security more than necessary; this means that ANYTHING
# running in the initrc_t domain can read the printer spool directory.
# Perhaps executing /etc/rc.d/init.d/lpd should transition
# to domain lpd_t, instead of waiting for executing lpd.
allow initrc_t print_spool_t:dir { read };


# Use capabilities.
allow lpd_t lpd_t:capability { setgid setuid net_bind_service dac_read_search dac_override chown fowner };

# Inherit and use descriptors from init.
allow lpd_t init_t:fd use;

# Use the network.
can_network(lpd_t)

# Bind to the printer port.
allow lpd_t printer_port_t:tcp_socket name_bind;

# Send to portmap.
ifdef(`portmap.te', `can_udp_send(lpd_t, portmap_t)')

ifdef(`ypbind.te',
`# Connect to ypbind.
can_tcp_connect(lpd_t, ypbind_t)')

# Create and bind to /dev/printer.
file_type_auto_trans(lpd_t, device_t, printer_t)
allow lpd_t printer_t:unix_stream_socket name_bind;
allow lpd_t printer_t:unix_dgram_socket name_bind;
allow lpd_t printer_t:chr_file rw_file_perms;

# Write to /var/spool/lpd.
allow lpd_t print_spool_t:dir rw_dir_perms;
allow lpd_t print_spool_t:file create_file_perms;
allow lpd_t print_spool_t:file rw_file_perms;

# Execute filter scripts.
# can_exec(lpd_t, print_spool_t)

# Filter scripts may be shell scripts, and may invoke progs like /bin/mktemp
can_exec(lpd_t, { bin_t sbin_t shell_exec_t })

# lpd must be able to execute the filter utilities in /usr/share/printconf.
can_exec(lpd_t, printconf_t)
allow lpd_t printconf_t:file rx_file_perms;
allow lpd_t printconf_t:dir { getattr search read };

# checkpc needs similar permissions.
allow checkpc_t printconf_t:file { getattr };
allow checkpc_t printconf_t:dir { getattr search read };
