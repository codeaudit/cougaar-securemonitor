#DESC Sxid - SUID/SGID program monitoring
#
# Author:  Russell Coker <russell@coker.com.au>
#

#################################
#
# Rules for the sxid_t domain.
#
# sxid_exec_t is the type of the sxid executable.
#
daemon_base_domain(sxid, `, privmail')
tmp_domain(sxid)

allow sxid_t fs_t:filesystem getattr;

ifdef(`crond.te', `
system_crond_entry(sxid_exec_t, sxid_t)
')
#allow system_crond_t var_log_sxid_t:file create_file_perms;

allow sxid_t etc_t:lnk_file read;

can_exec(sxid_t, { shell_exec_t bin_t sbin_t mount_exec_t })
allow sxid_t bin_t:lnk_file read;

type var_log_sxid_t, file_type, sysadmfile;

file_type_auto_trans(sxid_t, var_log_t, var_log_sxid_t)

allow sxid_t file_type:dir_file_class_set getattr;
allow sxid_t file_type:file read;
allow sxid_t file_type:dir { read search };
allow sxid_t root_dir_type:dir { getattr read search };

# Use the network.
can_network(sxid_t)
allow sxid_t self:fifo_file rw_file_perms;
allow sxid_t self:unix_stream_socket create_socket_perms;

allow sxid_t { proc_t self }:file { read getattr };
allow sxid_t { sysctl_kernel_t sysctl_t }:dir search;
allow sxid_t sysctl_kernel_t:file read;
allow sxid_t devtty_t:chr_file rw_file_perms;

allow sxid_t self:capability { dac_override dac_read_search fsetid };
dontaudit sxid_t self:capability { setuid setgid };

ifdef(`mta.te', `
# sxid leaves an open file handle to /proc/mounts
dontaudit { system_mail_t mta_user_agent } sxid_t:file { read getattr };

# allow mta to read the log files
allow { system_mail_t mta_user_agent } { sxid_tmp_t var_log_sxid_t }:file { getattr read };
# stop warnings if mailx is passed a read/write file handle
dontaudit { system_mail_t mta_user_agent } { sxid_tmp_t var_log_sxid_t }:file write;
')

allow logrotate_t sxid_t:file { getattr write };
